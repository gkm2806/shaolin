{"version":3,"sources":["../../src/routers/aulas.js"],"names":["aulaRouter","express","Router","neutralAulas","teste","req","res","User","findOne","_id","body","createdBy","creator","permission","fixa","professor","username","status","send","route","get","Aula","find","err","aulas","json","post","next","turma","fail","inicioMoment","horaInicio","fimMoment","horaFim","Turma","nome","turmaColor","color","diff","format","add","aula","sala","dia","then","result","length","aviso","console","log","includes","push","i","save","deleteMany","put","patch","p","params","aulaId","deleteOne","sendStatus"],"mappings":"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","sourcesContent":["\nimport express from 'express';\nimport Aula from '../models/aula';\nimport Turma from \"../models/turma\"\nimport moment from \"moment\"\nimport Auth from \"../auth/auth\"\nimport User from \"../models/users\"\n\nconst aulaRouter = express.Router();\n\nconst neutralAulas = [\"PE\",\"EAD\",\"FIC\"]\n\nconst teste = async(req,res) => {\n    let creator = await User.findOne({_id: req.body.createdBy})\n    if(creator.permission > 2){\n        req.body.fixa = true\n    }else if(req.body.professor != creator.username){\n        res.status(403).send(\"Professores não podem agendar aula para colegas!\")\n    }\n    req.body.createdBy = creator.username\n}\n\naulaRouter.route('/')\n    .get((req, res) => {\n        Aula.find({}, (err, aulas) => {\n            res.json(aulas)\n        })  \n    })\n    .post((req,res,next) => Auth(req,res,next))\n    .post(async (req,res) => {\n        if(!req.body.turma)res.status(400).send(\"No Turma provided\")\n        let fail = 0\n        let inicioMoment = moment(req.body.horaInicio,\"HH:mm\");\n        let fimMoment = moment(req.body.horaFim,\"HH:mm\");\n        let aulas = []\n\n        let turmaColor = await Turma.findOne({ nome: req.body.turma })\n        if(!turmaColor)res.status(400).send(\"Turma não encontrada no sistema\")\n        await teste(req, res)\n        req.body.color = turmaColor.color\n        while(inicioMoment.diff(fimMoment,\"minutes\") < -30){\n            if((inicioMoment.format(\"HH:mm\")) == \"09:15\" || (inicioMoment.format(\"HH:mm\") == \"15:15\")) inicioMoment.add(15,\"minutes\") //intervalos\n            if((inicioMoment.format(\"HH:mm\")) == \"12:30\") inicioMoment.add(30,\"minutes\") //mudança de turno\n            req.body.horaInicio = inicioMoment.format(\"HH:mm\")\n\n            let aula = new Aula(req.body);\n            const {sala,turma,professor,horaInicio, dia} = aula\n            await Aula.find({\"horaInicio\": horaInicio, \"dia\": dia, 'sala':sala})\n                .then((result)=>{\n                    if(!result.length === 0){\n                        fail++\n                        result.aviso = \"local\"\n                        res.status(409).send(result)\n                        console.log(\"Colisão de Local Detectada\")\n                    }\n                }).catch((err)=>{\n                    fail++\n                    res.status(405).send(err)\n                    console.log(\"Erro\")\n                })\n            if(!neutralAulas.includes(turma)){\n                await Aula.find({\"horaInicio\": horaInicio, \"dia\": dia, 'turma':turma})\n                    .then((result)=>{\n                        if(!result.length === 0){\n                            fail++\n                            result.aviso = \"turma\"\n                            res.status(409).send(result)\n                            console.log(\"Colisão de Turma Detectada\")\n                        }\n                    }).catch((err)=>{\n                        fail++\n                        res.status(405).send(err)\n                        console.log(\"Erro\")\n                    })\n            }\n            await Aula.find({\"horaInicio\": horaInicio, \"dia\": dia, 'professor':professor})\n                .then((result)=>{\n                    if(!result.length === 0){\n                        fail++\n                        result.aviso = \"professor\"\n                        res.status(409).send(result)\n                        console.log(\"Colisão de Professor Detectada\")\n                    }\n                }).catch((err)=>{\n                    fail++\n                    res.status(405).send(err)\n                    console.log(\"Erro\")\n                })\n            inicioMoment.add(45,\"minutes\")\n            aulas.push(aula)\n        } \n        if(fail==0){\n            for(var i = 0; i < aulas.length; i++){\n                aulas[i].save()\n                console.log(\"Aula criada no sistema\")\n            }\n            console.log(\"Retornando aula\")\n            res.status(201).send(aulas)\n        }\n    })\naulaRouter.route('/DELETEALL')\n    .get((req, res) => {\n        Aula.deleteMany({},()=>{\n            res.send(\"deletado\")\n        })\n    })\naulaRouter.route('/:aulaId')\n    .put((req,res) => {\n        /*\n        req.aula.title = req.body.title;\n        req.aula.author = req.body.author;\n        req.aula.save()\n        res.json(req.aula)\n        */\n    })\n    .patch((req,res)=>{\n        if(req.body._id){\n            delete req.body._id;\n        }\n        for( let p in req.body ){\n            req.aula[p] = req.body[p]\n        }\n        req.aula.save()\n        res.json(req.aula)\n    })//patch\n    .delete(async(req, res) => {\n        try{\n            console.log(`Trying to delete ${req.params.aulaId}`)\n            await Aula.deleteOne({_id: req.params.aulaId})\n                .then(()=>{\n                    console.log(`${req.params.aulaId} deleted`)\n                    res.sendStatus(200)\n                }).catch(()=>\n                    res.sendStatus(400)\n                )\n        }catch(e){\n            res.send(e)\n        }\n    });\n\n\nexport default aulaRouter"],"file":"aulas.js"}